# -*- coding: utf-8 -*-
"""Sushant_MulLinReg_EXPT3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RbqeiJq60G9g56sJb_-tE-S_OfAFbzQX
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Connecting to Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Importing the dataset
data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Student_Performance.csv')

e_a = list()
data1 = data.copy()
for value in data1['Extracurricular Activities']:
    if value == "Yes":
        e_a.append(1)
    else:
        e_a.append(0)
data1['Extracurricular Activities'] = e_a

data1

# Feature scaling the columns (OPTIONAL)
for column in data1.columns:
    max = data1[f'{column}'].max()
    #data2['state'] = (data2['state'] - data2['state'].mean()) / data2['state'].std()
    data1[f'{column}'] = data1[f'{column}'] / max
data1

# Initialization
data2 = data1.to_numpy()
X = data2[:,:-1].T
Y_tru = data2[:,-1]
n = len(X[0])
α = 0.000001

def MSE(Y_pre, Y_tru):
    return np.sum(((Y_pre - Y_tru) ** 2) / n)

X = np.vstack((X, np.ones_like(X[0])))
CF = []
print(X)
θ = np.zeros(len(X))
print(np.shape(θ))
for i in range(0, 2000):
    print(f'Epoch {i}')
    X
    Y_pre = θ @ X
    mse = MSE(Y_pre, Y_tru)
    CF.append(mse)
    print(f'Predicted: {Y_pre}\nActual: {Y_tru}')
    θ = θ - (α / n) * np.sum((Y_pre - Y_tru) * X, axis=1)

# Plotting
print(CF)
plt.plot(CF)
plt.xlabel('Epochs')
plt.ylabel('CF')

# Prediction
X1 = 8    # Hours studied
X2 = 89   # Previous score
X3 = 0    # Extracurricular
X4 = 7    # Sleep
X5 = 10   # Sample Q Paper
X0 = 1    #

Y = θ[0] * X0 + θ[1] * X1 + θ[2] * X2 + θ[3] * X3 + θ[4] * X4 + θ[5] * X5
print(f'Predicted Performance Index, Y = {Y}')